import { Table, TableBody, TableCell, TableFooter, TableHead, TablePagination, TableRow, Button } from '@material-ui/core';
import { ToggleButtonGroup } from '@material-ui/lab';
import axios from 'axios';
import { useEffect, useState } from 'react';
import Layout from '../../components/Layout';
import { Product } from '../../models/product';

const Products = () => {

  const [products, setProducts] = useState<Product[]>([]);
  const [page, setPage] = useState(0);
  const perPage = 10;


  useEffect(() => {
    (
      async () => {
        const { data } = await axios.get('products');
        setProducts(data);
      }
    )()
  }, []);

  const del = async (id: number) => {
    if (window.confirm('are you sure?')) {
      await axios.delete(`products/${id}`)
      // after deleting filter the products array to be without the deleted product
      setProducts(products.filter(p => p.id !== id))
    }
  }

  return (
    <Layout>
      <div className="pt-3 pb-2 mb-3 border-bottom">
        <Button href={'/products/create'} variant="contained" color="primary">Add</Button>
      </div>
      <Table>
        <TableHead>
          <TableRow>
            <TableCell scope="col">#</TableCell>
            <TableCell scope="col">Image</TableCell>
            <TableCell scope="col">Title</TableCell>
            <TableCell scope="col">Description</TableCell>
            <TableCell scope="col">Price</TableCell>
            <TableCell scope="col">Actions</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          {products.slice(page * perPage, (page + 1) * perPage).map(product => {
            return (
              <TableRow key={product.id}>
                <TableCell>{product.id}</TableCell>
                <TableCell><img src={product.image} alt="Image generated by unsplash" width={50}/></TableCell>
                <TableCell>{product.title}</TableCell>
                <TableCell>{product.description}</TableCell>
                <TableCell>${product.price}.00</TableCell>
                <TableCell>
                  <ToggleButtonGroup>
                    <Button variant='contained' color='primary'
                      href={`/products/${product.id}/edit`}
                    >Edit</Button>
                    <Button variant='contained' color='secondary'
                      onClick={() => del(product.id)}
                    >Delete</Button>
                  </ToggleButtonGroup>
                </TableCell>
              </TableRow>
            );
          })}
        </TableBody>
        <TableFooter>
          <TableRow>
            <TablePagination
              count={products.length}
              page={page}
              onPageChange={(e, newPage) => setPage(newPage)}
              rowsPerPage={perPage}
              rowsPerPageOptions={[]}   // so we do not see the dropdown to change rows per page
            />
          </TableRow>
        </TableFooter>
      </Table>
    </Layout>
  );
}

export default Products;